{"version":3,"file":"static/js/529.8f4a4c8e.chunk.js","mappings":"gRA0GA,UAxFgB,WACd,OAAiDA,EAAAA,EAAAA,KAA1CC,EAAP,EAAOA,UAAUC,EAAjB,EAAiBA,MAAMC,EAAvB,EAAuBA,YAAYC,EAAnC,EAAmCA,aAC7BC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAAaF,OAC/BG,GAAMF,EAAAA,EAAAA,YAAWC,EAAAA,GAAaC,MAC9BC,GAAQC,EAAAA,EAAAA,MACd,GAA+BC,EAAAA,EAAAA,GAAQ,CACrCC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,GAEXG,MAAM,CACJJ,MAAM,KACNC,SAAQ,KAEV,GAjBF,eAAOI,EAAP,KAAoBC,EAApB,KAmBMC,EAAiB,yCAAG,WAAMC,GAAN,mFACxBA,EAAMC,iBADkB,UAGhBC,EAAS,IAAIC,UACVC,OAAO,QAASN,EAAUO,OAAOd,MAAMC,OAChDU,EAASE,OAAO,cAAeN,EAAUO,OAAOX,YAAYF,OAC5DU,EAASE,OAAO,UAAWN,EAAUO,OAAOV,QAAQH,OACpDU,EAASE,OAAO,QAASN,EAAUO,OAAOT,MAAMJ,OAP1B,SAQhBV,EACJwB,yDACA,OACAJ,EACA,CACEK,cAAe,UAAYpB,IAbT,OAiBtBC,EAAQoB,KAAK,IAAIxB,EAAO,UAjBF,kDAoBtByB,QAAQC,IAAR,MApBsB,0DAAH,sDA0BvB,OACE,UAAC,WAAD,YACE,SAAC,IAAD,CAAY7B,MAAOA,EAAO8B,QAAS5B,KACrC,kBAAM6B,UAAU,YAAYC,SAAUd,EAAtC,UACGnB,IAAa,SAAC,IAAD,CAAgBkC,WAAS,KACvC,SAAC,IAAD,CACEC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,8BACVC,QAASzB,KAEX,SAAC,IAAD,CAAakB,GAAG,QAAQM,UAAU,2BAA2BC,QAASzB,KACtE,SAAC,IAAD,CACEkB,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,EAACI,EAAAA,EAAAA,IAAoB,IACjCF,UAAU,4DACVC,QAASzB,KAEX,SAAC,IAAD,CACEkB,GAAG,UACHC,QAAQ,QACRE,MAAM,UACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,gCACVC,QAASzB,KAEX,SAAC,IAAD,CAAQoB,KAAK,SAASO,UAAW1B,EAAUL,QAA3C,+B,+FCrCN,EA1DoB,SAACgC,GACnB,IAAMC,GAAgBC,EAAAA,EAAAA,UACtB,GAAqBC,EAAAA,EAAAA,YAArB,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAA2BF,EAAAA,EAAAA,WAAS,GAApC,eAAOnC,EAAP,KAAesC,EAAf,KACA,GAAiCH,EAAAA,EAAAA,YAAjC,eAAOI,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAIL,EAAJ,CAGA,IAAMM,EAAW,IAAIC,WACrBD,EAAWE,OAAO,WAChBJ,EAAcE,EAAWG,SAE3BH,EAAWI,cAAcV,MACzB,CAACA,IAqBH,OACE,iBAAKjB,UAAU,eAAf,WACE,kBACEK,KAAK,OACLF,GAAIU,EAAMV,GACVyB,IAAKd,EACLe,MAAO,CAAEC,QAAS,QAClBC,OAAO,cACPC,SA3BgB,SAAC5C,GACrB,IAAI6C,EACAC,GAAY,EACb9C,EAAM+C,OAAOC,OAAqC,IAA5BhD,EAAM+C,OAAOC,MAAMC,QAC1CJ,EAAW7C,EAAM+C,OAAOC,MAAM,GAC9BlB,EAAQe,GACRd,GAAW,GACXe,GAAY,IAGZf,GAAW,GACXe,GAAY,GAEdrB,EAAMH,QAAQG,EAAMV,GAAG8B,EAAWC,OAgBhC,iBAAKlC,UAAS,uBAAkBa,EAAMyB,QAAU,UAAhD,WACE,iBAAKtC,UAAU,wBAAf,UACGoB,IAAc,gBAAKmB,IAAKnB,EAAYoB,IAAI,aACvCpB,IAAc,oDAElB,SAACqB,EAAA,EAAD,CAAQpC,KAAK,SAASqC,QAlBH,WACvB5B,EAAc6B,QAAQC,SAiBlB,4BAEA/D,IAAW,uBAAIgC,EAAMJ,iB,wGCpDvBoC,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAO1C,MACb,IAAK,SACH,OAAO,kBACFyC,GADL,IAEElE,MAAOmE,EAAOC,IACdnE,SAASoE,EAAAA,EAAAA,IAASF,EAAOC,IAAKD,EAAOxC,cAEzC,IAAK,QACH,OAAO,kBACFuC,GADL,IAEEI,WAAW,IAEf,QACE,OAAOJ,IA8Db,EA1Dc,SAACjC,GACb,OAA+BsC,EAAAA,EAAAA,YAAWN,EAAc,CACtDjE,MAAOiC,EAAMjC,OAAS,GACtBsE,WAAW,EACXrE,QAASgC,EAAMuC,QAAS,IAH1B,eAAOC,EAAP,KAAmBC,EAAnB,KAMQnD,EAAgBU,EAAhBV,GAAIO,EAAYG,EAAZH,QACJ9B,EAAmByE,EAAnBzE,MAAOC,EAAYwE,EAAZxE,SAEfyC,EAAAA,EAAAA,YAAU,WACRZ,EAAQP,EAAGvB,EAAMC,KACjB,CAACsB,EAAGvB,EAAM8B,EAAQ7B,IAEpB,IAAM0E,EAAgB,SAACnE,GACrBkE,EAAS,CACPjD,KAAM,SACN2C,IAAK5D,EAAM+C,OAAOvD,MAClB2B,WAAYM,EAAMN,cAIhBiD,EAAe,SAACpE,GACpBkE,EAAS,CAAEjD,KAAM,WAEbD,EACc,UAAlBS,EAAMT,SACJ,kBACED,GAAIU,EAAMV,GACVE,KAAMQ,EAAMR,KACZoD,YAAa5C,EAAM4C,YACnBzB,SAAUuB,EACVG,OAAQF,EACR5E,MAAOyE,EAAWzE,SAGpB,qBACE+E,IAAK9C,EAAM+C,MAAQ,EACnBzD,GAAIU,EAAMV,GACV6B,SAAUuB,EACVG,OAAQF,EACR5E,MAAOyE,EAAWzE,QAIxB,OACE,iBACEoB,UAAS,wBACNqD,EAAWxE,SAAWwE,EAAWH,WAAa,yBAFnD,WAKE,kBAAOW,OAAQhD,EAAMV,GAArB,SAA0BU,EAAMP,QAC/BF,GACCiD,EAAWxE,SAAWwE,EAAWH,YAAa,uBAAIrC,EAAMJ,iB,gGC1E1DqD,EAAc,SAAChB,EAAOC,GAC1B,OAAQA,EAAO1C,MACb,IAAK,eACH,IAAI0D,GAAc,EAClB,IAAK,IAAMC,KAAWlB,EAAMrD,OACrBqD,EAAMrD,OAAOuE,KAIhBD,EADEC,IAAYjB,EAAOiB,QACPD,GAAehB,EAAOlE,QAEtBkF,GAAejB,EAAMrD,OAAOuE,GAASnF,SAGvD,OAAO,kBACFiE,GADL,IAEErD,QAAO,kBACFqD,EAAMrD,QADL,cAEHsD,EAAOiB,QAAU,CAAEpF,MAAOmE,EAAOnE,MAAOC,QAASkE,EAAOlE,WAE3DA,QAASkF,IAEb,IAAK,WACH,MAAM,CACJtE,OAAOsD,EAAOtD,OACdZ,QAAQkE,EAAOlE,SAEnB,QACE,OAAOiE,IAIApE,EAAQ,SAACuF,EAAcC,GAChC,OAA8Bf,EAAAA,EAAAA,YAAWW,EAAa,CACpDrE,OAAOwE,EACPpF,QAASqF,IAFX,eAAOhF,EAAP,KAAkBoE,EAAlB,KAsBA,MAAO,EAjBca,EAAAA,EAAAA,cAAY,SAAChE,EAAIvB,EAAOC,GAC3CyE,EAAS,CACPjD,KAAM,eACNzB,MAAOA,EACPC,QAASA,EACTmF,QAAS7D,MAEV,IAUkBjB,GARHiF,EAAAA,EAAAA,cAAY,SAAC1E,EAAOZ,GACpCyE,EAAS,CACPjD,KAAK,WACLZ,OAAOA,EACP2E,QAAQvF,MAEV,O,2ICvDN,IAAMwF,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBhE,EAAoB,iBAAO,CAAEH,KAAMgE,IAEnC1D,EAAsB,SAACqC,GAAD,MAAU,CAC3C3C,KAAMiE,EACNtB,IAAKA,IAQMyB,EAAkB,iBAAO,CAAEpE,KAAMmE,IAEjCvB,EAAW,SAACrE,EAAO2B,GAC9B,IAD6C,EACzC1B,GAAU,EAD+B,ECrBhC,SAAoC6F,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAElE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAErC,OAAqB,CAC/GuC,IAAIF,EAAIE,GACZ,IAAIM,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKR,EAAErC,OAAe,CACxBiD,MAAM,GAED,CACLA,MAAM,EACN1G,MAAO8F,EAAEQ,OAGbK,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGN,GAIP,MAAM,IAAIO,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLT,EAAG,WACDR,EAAKA,EAAGkB,KAAKpB,IAEfW,EAAG,WACD,IAAIU,EAAOnB,EAAGoB,OAEd,OADAJ,EAAmBG,EAAKT,KACjBS,GAETR,EAAG,SAAWU,GACZJ,GAAS,EACTF,EAAMM,GAERR,EAAG,WACD,IACOG,GAAoC,MAAhBhB,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIiB,EAAQ,MAAMF,KD9BqB,CAErBpF,GAFqB,IAE7C,2BAAoC,CAAC,IAA1B2F,EAAyB,QAC9BA,EAAU7F,OAASgE,IACrBxF,EAAUA,GAAWD,EAAMuH,OAAO9D,OAAS,GAEzC6D,EAAU7F,OAASiE,IACrBzF,EAAUA,GAAWD,EAAMuH,OAAO9D,QAAU6D,EAAUlD,KAEpDkD,EAAU7F,OAASkE,IACrB1F,EAAUA,GAAWD,EAAMuH,OAAO9D,QAAU6D,EAAUlD,KA7BjC,QA+BnBkD,EAAU7F,OACZxB,EAAUA,IAAYD,GAASsH,EAAUlD,KA/BpB,QAiCnBkD,EAAU7F,OACZxB,EAAUA,IAAYD,GAASsH,EAAUlD,KAEvCkD,EAAU7F,OAASmE,IACrB3F,EAAUA,GAAW,iBAAiBuH,KAAKxH,KAnBF,8BAsB7C,OAAOC,I","sources":["posts/pages/newPost.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React,{useContext} from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\n\r\nimport \"./newPost.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport {useHttpClient} from '../../shared/hooks/http-hook';\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {AuthContext} from '../../shared/context/Auth-context';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst NewPost = () => {  \r\n  const {isLoading,error,sendRequest,errorHandler}=useHttpClient();\r\n  const userId=useContext(AuthContext).userId;\r\n  const token=useContext(AuthContext).token;\r\n  const history=useHistory();\r\n  const [inputHandler,formState]=useForm({\r\n    title: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    address: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    image:{\r\n      value:null,\r\n      isValid:false,\r\n    }\r\n  },false);\r\n\r\n  const postSubmitHandler = async(event) => {\r\n    event.preventDefault();\r\n    try{\r\n      const formData=new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/posts/\",\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n        }\r\n      );      \r\n      \r\n      history.push('/'+userId+\"/posts\");      \r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n    }\r\n\r\n    // console.log(formState.inputs); \r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler}/>\r\n    <form className=\"post-form\" onSubmit={postSubmitHandler}>\r\n      {isLoading && <LoadingSpinner asOverlay/>}\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <ImageUpload id=\"image\" errorText=\"Please provide and image\" onInput={inputHandler}/>\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (at least 5 characters).\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"address\"\r\n        element=\"input\"\r\n        label=\"Address\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid address.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Button type=\"submit\" disabled={!formState.isValid}>\r\n        ADD PLACE\r\n      </Button>\r\n    </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default NewPost;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const filePickerRef = useRef();\r\n  const [file,setFile]=useState();\r\n  const [isValid,setIsValid]=useState(false);\r\n  const [previewUrl,setPreviewUrl]=useState();\r\n\r\n  useEffect(()=>{\r\n    if(!file){\r\n      return;\r\n    }\r\n    const fileReader=new FileReader();\r\n    fileReader.onload=()=>{\r\n      setPreviewUrl(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n  },[file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsvalid=false;\r\n    if(event.target.files && event.target.files.length===1){\r\n      pickedFile=event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsvalid=true;\r\n    }\r\n    else{\r\n      setIsValid(false);\r\n      fileIsvalid=false;\r\n    }\r\n    props.onInput(props.id,pickedFile,fileIsvalid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.jpeg,\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\"/>}\r\n          {!previewUrl && <p>Please set a picture</p>}\r\n        </div>\r\n        <Button type='button' onClick={pickImageHandler}>Pick Image</Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.value || \"\",\r\n    isTouched: false,\r\n    isValid: props.valid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(()=>{\r\n    onInput(id,value,isValid)\r\n  },[id,value,onInput,isValid])\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = (event) => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        row={props.rows || 3}\r\n        id={props.id}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmfor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import {useCallback,useReducer} from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case 'set_data':\r\n      return{\r\n        inputs:action.inputs,  \r\n        isValid:action.isValid,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm=(initialInputs,initialFormValidity)=>{\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n      inputs:initialInputs,\r\n      isValid: initialFormValidity,\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n      dispatch({\r\n        type: \"INPUT_CHANGE\",\r\n        value: value,\r\n        isValid: isValid,\r\n        inputId: id,\r\n      });\r\n    }, []);\r\n\r\n    const setFormData=useCallback((inputs,isValid)=>{\r\n      dispatch({\r\n        type:'set_data',\r\n        inputs:inputs,\r\n        isvalid:isValid,\r\n      })\r\n    },[]);\r\n    \r\n    return [inputHandler,formState,setFormData];\r\n}","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["useHttpClient","isLoading","error","sendRequest","errorHandler","userId","useContext","AuthContext","token","history","useHistory","useForm","title","value","isValid","description","address","image","inputHandler","formState","postSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","push","console","log","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","props","filePickerRef","useRef","useState","file","setFile","setIsValid","previewUrl","setPreviewUrl","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsvalid","target","files","length","center","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","valid","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","row","rows","htmfor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","isvalid","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}