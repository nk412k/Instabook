{"version":3,"file":"static/js/886.2e3766bc.chunk.js","mappings":"iRA0IA,UAzHmB,WACjB,IAAMA,GAASC,EAAAA,EAAAA,MAAYD,OACrBE,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACxB,GAAwDC,EAAAA,EAAAA,KAAhDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,aACvC,GAAoCC,EAAAA,EAAAA,YAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAUC,EAAAA,EAAAA,MAChB,GAA+CC,EAAAA,EAAAA,GAC7C,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,KAGb,GAXF,eAAOE,EAAP,KAAqBC,EAArB,KAAgCC,EAAhC,MAcAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,yCAAG,kHAEahB,EACzBiB,yDAAgDzB,GAHpC,OAER0B,EAFQ,OAKdd,EAAcc,EAAaC,MAC3BL,EACE,CACEN,MAAO,CACLC,MAAOS,EAAaC,KAAKX,MACzBE,SAAS,GAEXC,YAAa,CACXF,MAAOS,EAAaC,KAAKR,YACzBD,SAAS,KAGb,GAjBY,gDAoBdU,QAAQC,IAAR,MApBc,yDAAH,qDAuBfL,MACC,CAACF,EAAatB,EAAQQ,IAEzB,IAAMsB,EAAiB,yCAAG,WAAOC,GAAP,6EACxBA,EAAMC,iBADkB,kBAGhBxB,EACJiB,yDAAgDzB,EAChD,QACAiC,KAAKC,UAAU,CACblB,MAAOK,EAAUc,OAAOnB,MAAMC,MAC9BE,YAAaE,EAAUc,OAAOhB,YAAYF,QAE5C,CACE,eAAgB,mBAChBmB,cAAe,UAAYlC,EAAKmC,QAZd,OAetBxB,EAAQyB,KAAK,IAAMpC,EAAKqC,OAAS,UAfX,gDAiBtBX,QAAQC,IAAR,MAjBsB,yDAAH,sDAqBvB,OAAIvB,GAEA,gBAAKkC,UAAU,SAAf,UACE,SAAC,IAAD,MAKD7B,GAAeJ,GAWlB,UAAC,WAAD,YACE,SAAC,IAAD,CAAYA,MAAOA,EAAOkC,QAAShC,KACjCH,GAAaK,IACb,kBAAM6B,UAAU,YAAYE,SAAUZ,EAAtC,WACE,SAAC,IAAD,CACEa,GAAG,QACHC,KAAK,OACLC,MAAM,QACNC,QAAQ,QACRC,WAAY,EAACC,EAAAA,EAAAA,OAAqBC,EAAAA,EAAAA,IAAoB,IACtDC,UAAU,4BACVC,QAAS/B,EACTH,MAAOI,EAAUc,OAAOnB,MAAMC,MAC9BmC,MAAO/B,EAAUc,OAAOnB,MAAME,WAEhC,SAAC,IAAD,CACEyB,GAAG,cACHG,QAAQ,WACRD,MAAM,cACNE,WAAY,EAACE,EAAAA,EAAAA,IAAoB,IACjCC,UAAU,wDACVC,QAAS/B,EACTH,MAAOI,EAAUc,OAAOhB,YAAYF,MACpCmC,MAAO/B,EAAUc,OAAOhB,YAAYD,WAEtC,SAAC,IAAD,CAAQ0B,KAAK,SAASS,UAAWhC,EAAUH,QAA3C,gCAlCJ,gBAAKsB,UAAU,SAAf,UACE,SAAC,IAAD,WACE,wD,wGC5FJc,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOZ,MACb,IAAK,SACH,OAAO,kBACFW,GADL,IAEEtC,MAAOuC,EAAOC,IACdvC,SAASwC,EAAAA,EAAAA,IAASF,EAAOC,IAAKD,EAAOT,cAEzC,IAAK,QACH,OAAO,kBACFQ,GADL,IAEEI,WAAW,IAEf,QACE,OAAOJ,IA8Db,EA1Dc,SAACK,GACb,OAA+BC,EAAAA,EAAAA,YAAWP,EAAc,CACtDrC,MAAO2C,EAAM3C,OAAS,GACtB0C,WAAW,EACXzC,QAAS0C,EAAMR,QAAS,IAH1B,eAAOU,EAAP,KAAmBC,EAAnB,KAMQpB,EAAgBiB,EAAhBjB,GAAIQ,EAAYS,EAAZT,QACJlC,EAAmB6C,EAAnB7C,MAAOC,EAAY4C,EAAZ5C,SAEfK,EAAAA,EAAAA,YAAU,WACR4B,EAAQR,EAAG1B,EAAMC,KACjB,CAACyB,EAAG1B,EAAMkC,EAAQjC,IAEpB,IAAM8C,EAAgB,SAACjC,GACrBgC,EAAS,CACPnB,KAAM,SACNa,IAAK1B,EAAMkC,OAAOhD,MAClB8B,WAAYa,EAAMb,cAIhBmB,EAAe,SAACnC,GACpBgC,EAAS,CAAEnB,KAAM,WAEbE,EACc,UAAlBc,EAAMd,SACJ,kBACEH,GAAIiB,EAAMjB,GACVC,KAAMgB,EAAMhB,KACZuB,YAAaP,EAAMO,YACnBC,SAAUJ,EACVK,OAAQH,EACRjD,MAAO6C,EAAW7C,SAGpB,qBACEqD,IAAKV,EAAMW,MAAQ,EACnB5B,GAAIiB,EAAMjB,GACVyB,SAAUJ,EACVK,OAAQH,EACRjD,MAAO6C,EAAW7C,QAIxB,OACE,iBACEuB,UAAS,wBACNsB,EAAW5C,SAAW4C,EAAWH,WAAa,yBAFnD,WAKE,kBAAOa,OAAQZ,EAAMjB,GAArB,SAA0BiB,EAAMf,QAC/BC,GACCgB,EAAW5C,SAAW4C,EAAWH,YAAa,uBAAIC,EAAMV,iB,gGC1E1DuB,EAAc,SAAClB,EAAOC,GAC1B,OAAQA,EAAOZ,MACb,IAAK,eACH,IAAI8B,GAAc,EAClB,IAAK,IAAMC,KAAWpB,EAAMpB,OACrBoB,EAAMpB,OAAOwC,KAIhBD,EADEC,IAAYnB,EAAOmB,QACPD,GAAelB,EAAOtC,QAEtBwD,GAAenB,EAAMpB,OAAOwC,GAASzD,SAGvD,OAAO,kBACFqC,GADL,IAEEpB,QAAO,kBACFoB,EAAMpB,QADL,cAEHqB,EAAOmB,QAAU,CAAE1D,MAAOuC,EAAOvC,MAAOC,QAASsC,EAAOtC,WAE3DA,QAASwD,IAEb,IAAK,WACH,MAAM,CACJvC,OAAOqB,EAAOrB,OACdjB,QAAQsC,EAAOtC,SAEnB,QACE,OAAOqC,IAIAxC,EAAQ,SAAC6D,EAAcC,GAChC,OAA8BhB,EAAAA,EAAAA,YAAWY,EAAa,CACpDtC,OAAOyC,EACP1D,QAAS2D,IAFX,eAAOxD,EAAP,KAAkB0C,EAAlB,KAsBA,MAAO,EAjBce,EAAAA,EAAAA,cAAY,SAACnC,EAAI1B,EAAOC,GAC3C6C,EAAS,CACPnB,KAAM,eACN3B,MAAOA,EACPC,QAASA,EACTyD,QAAShC,MAEV,IAUkBtB,GARHyD,EAAAA,EAAAA,cAAY,SAAC3C,EAAOjB,GACpC6C,EAAS,CACPnB,KAAK,WACLT,OAAOA,EACP4C,QAAQ7D,MAEV,O,2ICvDN,IAAM8D,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBnC,EAAoB,iBAAO,CAAEJ,KAAMoC,IAEnC/B,EAAsB,SAACQ,GAAD,MAAU,CAC3Cb,KAAMqC,EACNxB,IAAKA,IAQM2B,EAAkB,iBAAO,CAAExC,KAAMuC,IAEjCzB,EAAW,SAACzC,EAAO8B,GAC9B,IAD6C,EACzC7B,GAAU,EAD+B,ECrBhC,SAAoCmE,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAElE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNjF,MAAOoE,EAAES,OAGbK,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGN,GAIP,MAAM,IAAIO,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLT,EAAG,WACDT,EAAKA,EAAGmB,KAAKrB,IAEfY,EAAG,WACD,IAAIU,EAAOpB,EAAGqB,OAEd,OADAJ,EAAmBG,EAAKT,KACjBS,GAETR,EAAG,SAAWU,GACZJ,GAAS,EACTF,EAAMM,GAERR,EAAG,WACD,IACOG,GAAoC,MAAhBjB,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIkB,EAAQ,MAAMF,KD9BqB,CAErBxD,GAFqB,IAE7C,2BAAoC,CAAC,IAA1B+D,EAAyB,QAC9BA,EAAUlE,OAASoC,IACrB9D,EAAUA,GAAWD,EAAM8F,OAAOlB,OAAS,GAEzCiB,EAAUlE,OAASqC,IACrB/D,EAAUA,GAAWD,EAAM8F,OAAOlB,QAAUiB,EAAUrD,KAEpDqD,EAAUlE,OAASsC,IACrBhE,EAAUA,GAAWD,EAAM8F,OAAOlB,QAAUiB,EAAUrD,KA7BjC,QA+BnBqD,EAAUlE,OACZ1B,EAAUA,IAAYD,GAAS6F,EAAUrD,KA/BpB,QAiCnBqD,EAAUlE,OACZ1B,EAAUA,IAAYD,GAAS6F,EAAUrD,KAEvCqD,EAAUlE,OAASuC,IACrBjE,EAAUA,GAAW,iBAAiB8F,KAAK/F,KAnBF,8BAsB7C,OAAOC,I","sources":["posts/pages/updatePost.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./newPost.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/context/Auth-context\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nconst UpdatePost = () => {\r\n  const postId = useParams().postId;\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n  const [loadedPost, setLoadedPost] = useState();\r\n  const history = useHistory();\r\n  const [inputHandler, formState, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/posts/\" + postId\r\n        );\r\n        setLoadedPost(responseData.post);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.post.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.post.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchPost();\r\n  }, [setFormData, postId, sendRequest]);\r\n\r\n  const updatePostHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/posts/\" + postId,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      history.push(\"/\" + auth.userId + \"/posts\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    // console.log(formState.inputs)\r\n  };\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPost && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      {!isLoading && loadedPost && (\r\n        <form className=\"post-form\" onSubmit={updatePostHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            element=\"input\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter valid title.\"\r\n            onInput={inputHandler}\r\n            value={formState.inputs.title.value}\r\n            valid={formState.inputs.title.isValid}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            value={formState.inputs.description.value}\r\n            valid={formState.inputs.description.isValid}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Update Post\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePost;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.value || \"\",\r\n    isTouched: false,\r\n    isValid: props.valid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(()=>{\r\n    onInput(id,value,isValid)\r\n  },[id,value,onInput,isValid])\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = (event) => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        row={props.rows || 3}\r\n        id={props.id}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmfor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import {useCallback,useReducer} from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case 'set_data':\r\n      return{\r\n        inputs:action.inputs,  \r\n        isValid:action.isValid,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm=(initialInputs,initialFormValidity)=>{\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n      inputs:initialInputs,\r\n      isValid: initialFormValidity,\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n      dispatch({\r\n        type: \"INPUT_CHANGE\",\r\n        value: value,\r\n        isValid: isValid,\r\n        inputId: id,\r\n      });\r\n    }, []);\r\n\r\n    const setFormData=useCallback((inputs,isValid)=>{\r\n      dispatch({\r\n        type:'set_data',\r\n        inputs:inputs,\r\n        isvalid:isValid,\r\n      })\r\n    },[]);\r\n    \r\n    return [inputHandler,formState,setFormData];\r\n}","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["postId","useParams","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","errorHandler","useState","loadedPost","setLoadedPost","history","useHistory","useForm","title","value","isValid","description","inputHandler","formState","setFormData","useEffect","fetchPost","process","responseData","post","console","log","updatePostHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","className","onClear","onSubmit","id","type","label","element","validators","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","errorText","onInput","valid","disabled","inputReducer","state","action","val","validate","isTouched","props","useReducer","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onChange","onBlur","row","rows","htmfor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","isvalid","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}